# nginx.conf

events {}

http {
  # --- Define our upstream application services ---
  upstream frontend {
    # CORRECTED: Point to the port your frontend container is listening on.
    server frontend:80;
  }
  upstream backend {
    server backend:5000;
  }

  # --- Server block to redirect all HTTP traffic to HTTPS ---
  server {
    listen 80;
    # IMPORTANT: Replace with your actual domain name
    server_name chatapp.anikhade.com;

    # Redirect to the HTTPS version of the site
    location / {
      return 301 https://$host$request_uri;
    }
  }

  # --- Main server block for serving content over HTTPS ---
  server {
    listen 443 ssl http2; # Listen on the SSL port, enable HTTP/2 for better performance
    # IMPORTANT: Replace with your actual domain name
    server_name chatapp.anikhade.com;

    # --- SSL Certificate Configuration ---
    ssl_certificate /etc/letsencrypt/live/chatapp.anikhade.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/chatapp.anikhade.com/privkey.pem;

    # --- Proxy Configurations (your existing logic) ---
    location /api/ {
      proxy_pass http://backend/api/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Correctly handle the WebSocket connection for Socket.IO
    location /socket.io/ {
      proxy_pass http://backend/socket.io/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade; # Important for WebSocket handshakes
    }

    location / {
      proxy_pass http://frontend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}